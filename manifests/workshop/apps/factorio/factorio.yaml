---
apiVersion: v1
kind: Namespace
metadata:
  name: factorio
---
apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: factorio-repo
  namespace: factorio
spec:
  interval: 5m
  url: https://sqljames.github.io/factorio-server-charts/
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: factorio-server
  namespace: factorio
spec:
  releaseName: factorio
  chart:
    spec:
      chart: factorio-server-charts
      version: 1.0.11
      sourceRef:
        kind: HelmRepository
        name: factorio-repo
        namespace: factorio
  interval: 5m
  values:
#    controller:
#      ingressClassResource:
#        default: true
#      config:
#        use-proxy-protocol: 'true'
#        hsts-include-subdomains: "false"
#        server-name-hash-bucket-size: "256"
#        enable-vts-status: "true"
#        use-http2: "true"
#        ssl-protocols: "TLSv1.2 TLSv1.3"
#        worker-shutdown-timeout: '240s'
#        server-tokens: "false"
#        ssl-session-tickets: 'false'
#        use-gzip: 'true'
#        enable-modsecurity: 'false'
#        enable-owasp-modsecurity-crs: 'false'
#
#        # https://kubernetes.github.io/ingress-nginx/deploy/hardening-guide/
#        keep-alive: '10'
#        enable-ocsp: 'true'
#        hsts-preload: 'true'
#
#      autoscaling:
#        enabled: true
#        minReplicas: 1
#        maxReplicas: 3
#        targetCPUUtilizationPercentage: 50
#        targetMemoryUtilizationPercentage: 85
      service:
        type: 'LoadBalancer'
        externalTrafficPolicy: 'Cluster'
        annotations:
          service.beta.kubernetes.io/aws-load-balancer-type: nlb
          service.beta.kubernetes.io/aws-load-balancer-backend-protocol: 'udp'
#          service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: "*"
          # service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: '120'
#          service.beta.kubernetes.io/aws-load-balancer-connection-draining-enabled: true
#          service.beta.kubernetes.io/aws-load-balancer-connection-draining-timeout: '10'
#      resources:
#        requests:
#          cpu: 200m
#          memory: 500Mi
#        limits:
#          cpu: 1500m
#          memory: 1Gi
#      publishService:
#        enabled: true
#      replicaCount: 1
#      minAvailable: 0
#      minReadySeconds: 30
#      lifecycle:
#        preStop:
#          exec:
#            command:
#              # wait 30s before initializing the shutdown
#              # This is to allow AWS to deregister the instance before shutting down nginx
#              - sh
#              - -c 'sleep 30 && /wait-shutdown'
#      updateStrategy:
#        type: RollingUpdate
#        rollingUpdate:
#          maxSurge: 1
#          maxUnavailable: 0
#      scope:
#        enabled: false
#      stats:
#        enabled: true
#      metrics:
#        enabled: true
#        service:
#          annotations:
#            prometheus.io/scrape: "true"
#            prometheus.io/port: "10254"
#        serviceMonitor:
#          enabled: true
#      affinity:
#        podAntiAffinity:
#          preferredDuringSchedulingIgnoredDuringExecution:
#          - weight: 100
#            podAffinityTerm:
#              labelSelector:
#                matchExpressions:
#                - key: app.kubernetes.io/name
#                  operator: In
#                  values: ['ingress-nginx']
#              topologyKey: kubernetes.io/hostname
#
#    defaultBackend:
#      enabled: true
#      minAvailable: 1
#      replicaCount: 2
#      resources:
#        requests:
#          cpu: 5m
#          memory: 5Mi
#    rbac:
#      create: true
#    serviceAccount:
#      create: true
